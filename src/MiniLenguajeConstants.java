/* Generated By:JavaCC: Do not edit this line. MiniLenguajeConstants.java */

/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface MiniLenguajeConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int tCLASE = 6;
  /** RegularExpression Id. */
  int tMETODO = 7;
  /** RegularExpression Id. */
  int tPROGRAMA = 8;
  /** RegularExpression Id. */
  int tVAR = 9;
  /** RegularExpression Id. */
  int tAND = 10;
  /** RegularExpression Id. */
  int tOR = 11;
  /** RegularExpression Id. */
  int tNOT = 12;
  /** RegularExpression Id. */
  int tPRINCIPIO = 13;
  /** RegularExpression Id. */
  int tFIN = 14;
  /** RegularExpression Id. */
  int tSI = 15;
  /** RegularExpression Id. */
  int tENT = 16;
  /** RegularExpression Id. */
  int tSI_NO = 17;
  /** RegularExpression Id. */
  int tFSI = 18;
  /** RegularExpression Id. */
  int tMQ = 19;
  /** RegularExpression Id. */
  int tFMQ = 20;
  /** RegularExpression Id. */
  int tESCRIBIR = 21;
  /** RegularExpression Id. */
  int tLEER = 22;
  /** RegularExpression Id. */
  int tMOD = 23;
  /** RegularExpression Id. */
  int tTRUE = 24;
  /** RegularExpression Id. */
  int tFALSE = 25;
  /** RegularExpression Id. */
  int tENTACAR = 26;
  /** RegularExpression Id. */
  int tCARAENT = 27;
  /** RegularExpression Id. */
  int tACCION = 28;
  /** RegularExpression Id. */
  int tVAL = 29;
  /** RegularExpression Id. */
  int tREF = 30;
  /** RegularExpression Id. */
  int tENTERO = 31;
  /** RegularExpression Id. */
  int tDECIMAL = 32;
  /** RegularExpression Id. */
  int tBOOLEANO = 33;
  /** RegularExpression Id. */
  int tCARACTER = 34;
  /** RegularExpression Id. */
  int tLLAVE_IZQ = 35;
  /** RegularExpression Id. */
  int tLLAVE_DCHA = 36;
  /** RegularExpression Id. */
  int tPARENTESIS_IZQ = 37;
  /** RegularExpression Id. */
  int tPARENTESIS_DCHA = 38;
  /** RegularExpression Id. */
  int tCORCHETE_IZQ = 39;
  /** RegularExpression Id. */
  int tCORCHETE_DCHA = 40;
  /** RegularExpression Id. */
  int tOPAS = 41;
  /** RegularExpression Id. */
  int tIGUAL = 42;
  /** RegularExpression Id. */
  int tFIN_SENTENCIA = 43;
  /** RegularExpression Id. */
  int tCOMA = 44;
  /** RegularExpression Id. */
  int tMAS = 45;
  /** RegularExpression Id. */
  int tMENOS = 46;
  /** RegularExpression Id. */
  int tPOR = 47;
  /** RegularExpression Id. */
  int tDIV = 48;
  /** RegularExpression Id. */
  int tMAI = 49;
  /** RegularExpression Id. */
  int tMEI = 50;
  /** RegularExpression Id. */
  int tNI = 51;
  /** RegularExpression Id. */
  int tMAYOR = 52;
  /** RegularExpression Id. */
  int tMENOR = 53;
  /** RegularExpression Id. */
  int tSTRING = 56;
  /** RegularExpression Id. */
  int tIDENTIFICADOR = 57;
  /** RegularExpression Id. */
  int tVALOR_ENTERO = 58;
  /** RegularExpression Id. */
  int tVALOR_DECIMAL = 59;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int STRING = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "<token of kind 5>",
    "\"clase\"",
    "\"metodo\"",
    "\"programa\"",
    "\"var\"",
    "\"and\"",
    "\"or\"",
    "\"not\"",
    "\"principio\"",
    "\"fin\"",
    "\"si\"",
    "\"ent\"",
    "\"si_no\"",
    "\"fsi\"",
    "\"mq\"",
    "\"fmq\"",
    "\"escribir\"",
    "\"leer\"",
    "\"mod\"",
    "\"true\"",
    "\"false\"",
    "\"entacar\"",
    "\"caraent\"",
    "\"accion\"",
    "\"val\"",
    "\"ref\"",
    "\"entero\"",
    "\"decimal\"",
    "\"booleano\"",
    "\"caracter\"",
    "\"{\"",
    "\"}\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\":=\"",
    "\"=\"",
    "\";\"",
    "\",\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "<tDIV>",
    "\">=\"",
    "\"<=\"",
    "\"<>\"",
    "\">\"",
    "\"<\"",
    "\"\\\"\"",
    "\"\\\"\"",
    "<tSTRING>",
    "<tIDENTIFICADOR>",
    "<tVALOR_ENTERO>",
    "<tVALOR_DECIMAL>",
  };

}
